<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///inicializacion de variable
//gravedad :predise√±ada es gravity
grav = 0.2;
// direcsion horizontntal  (hspeed)
hsp = 0;
//vertocal cspeed   (vspeed)
vsp = 0;
// magnitud de la velocidad   (speed)
movespeed =4 ;
jumpspeed = 7 ;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// movimiento del personaje 

//obtener las entradas de teclado 

key_right = keyboard_check(vk_right);
key_left = keyboard_check(vk_left);
key_space =  keyboard_check_pressed(vk_space);

//operaciones con las entradas del teclado
move= key_right  - key_left;
hsp = move * movespeed;
//colision horizontal
if(place_meeting(x+hsp,y,obj_block))
  {
  while(!place_meeting(x+sign(hsp),y,obj_block)) 
      {
       x += sign(hsp);
       }
       hsp = 0
  
  }
// colision vertical
if(place_meeting(x,y+vsp,obj_block))
  {
  while(!place_meeting(x,y+sign(vsp),obj_block)) 
      {
       y += sign(vsp);
       }
       vsp = 0
  
  }


x += hsp;
if(vsp&lt;10){vsp += grav;}

if(place_meeting(x,y+1,obj_block))
 {
 vsp = key_space * -jumpspeed;
 }
y += vsp
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
